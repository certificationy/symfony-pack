category: PHP
questions:
    -
        question: 'What is the short open tag for PHP?'
        answers:
            - {value: "<!",  correct: false}
            - {value: "<%",  correct: false}
            - {value: "<?",  correct: true}
            - {value: "<?=", correct: false}
    -
        question: 'Which of these operators is non-associative?'
        answers:
            - {value: "!",   correct: false}
            - {value: "**",  correct: false}
            - {value: "<",   correct: true}
            - {value: "and", correct: false}
    -
        question: 'Since PHP 5.6+, if function foo() is defined in the namespace Myapp\Utils\Bar and your code is in namespace Myapp, what is the correct way to import the foo() function?'
        answers:
            - {value: "use function foo;",                    correct: false}
            - {value: "use Myapp\\Utils\\Bar\\foo;",          correct: false}
            - {value: "use function Myapp\\Utils\\Bar\\foo;", correct: true}
            - {value: "use Utils\\Bar\\Foo;",                 correct: false}
    -
        question: 'True or False? It is possible to import all classes from a namespace in PHP.'
        answers:
            - {value: "True",  correct: false}
            - {value: "False", correct: true}
    -
        question: 'Which web services are supported natively in PHP?'
        answers:
            - {value: "SOAP and XML-RPC",  correct: true}
            - {value: "REST and SOAP",     correct: false}
            - {value: "Corba and XML-RPC", correct: false}
            - {value: "XML-RPC and REST",  correct: false}
        help: https://www.php.net/manual/en/refs.webservice.php
    -
        question: 'Variable names and function names are, respectively:'
        answers:
            - {value: "case insensitive and case sensitive",   correct: false}
            - {value: "case sensitive and case sensitive",     correct: false}
            - {value: "case sensitive and case insensitive",   correct: true}
            - {value: "case insensitive and case insensitive", correct: false}
    -
        question: 'Does PHP support function overloading?'
        answers:
            - {value: "Yes, in all cases",                            correct: false}
            - {value: "No, in all cases",                             correct: true}
            - {value: "Yes, but it depends on the function scope",    correct: false}
            - {value: "Yes, except when it is an anonymous function", correct: false}
    -
        question: 'Which of the following statements is not true?'
        answers:
            - {value: "In PHP>=5.6 argument lists may include the ... token to denote that the function accepts a variable number of arguments",               correct: false}
            - {value: "A function name, as other labels in PHP, must match the following regular expression: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*",        correct: false}
            - {value: "Variable functions work with language constructs such as echo, print, unset(), isset(), empty(), include or require",                   correct: true}
            - {value: "Assigning a closure (anonymous function) to a variable uses the same syntax as any other assignment, including the trailing semicolon", correct: false}
    -
        question: 'Which of the following function declarations must be used to return a reference?'
        answers:
            - {value: "function &foo() {...}",    correct: true}
            - {value: "function $foo() {...}",    correct: false}
            - {value: "function %foo() {...}",    correct: false}
            - {value: "function $$foo() {...}",   correct: false}
    -
        question: 'The ______ keyword is used to indicate an incomplete class or method, which must be further extended and/or implemented in order to be used.'
        answers:
            - {value: "abstract",   correct: true}
            - {value: "final",      correct: false}
            - {value: "protected",  correct: false}
            - {value: "incomplete", correct: false}
            - {value: "implements", correct: false}
    -
        question: 'Since PHP 5.4, which functionality allows horizontal composition of behavior ?'
        answers:
            - {value: "Traits",           correct: true}
            - {value: "Object Cloning",   correct: false}
            - {value: "ReflectionClass",  correct: false}
            - {value: "Inheritance",      correct: false}
    -
        question: 'True or False ? A closure is a lambda function that is aware of its surrounding context.'
        answers:
            - {value: "True",    correct: true}
            - {value: "False",   correct: false}
    -
        question: 'True or False ? A lambda function is a named PHP function that can be stored in a variable.'
        answers:
            - {value: "True",    correct: false}
            - {value: "False",   correct: true}
    -
        question: 'True or False ? An object is always used by reference ?'
        answers:
            - {value: "True",    correct: true}
            - {value: "False",   correct: false}
        help: |
            http://php.net/manual/en/oop5.intro.php
    -
        question: |
            $instance = new SimpleClass();
            $assigned = $instance;
            $instance = null;
            var_dump($assigned);
            True or false ? The code above display "null" ?'
        answers:
            - {value: "True",    correct: false}
            - {value: "False",   correct: true}
        help: |
            http://php.net/manual/en/language.oop5.basic.php#example-175
    -
        question: 'In a class, "public $var4 = self::myStaticMethod();" is a valid property declaration ?'
        answers:
            - {value: "True",    correct: false}
            - {value: "False",   correct: true}
        help: |
            http://php.net/manual/en/language.oop5.properties.php#example-180
    -
        question: 'True or False ? Is it possible to declare constant in an interface ?'
        answers:
            - {value: "True",    correct: true}
            - {value: "False",   correct: false}
        help: |
            http://php.net/manual/en/language.oop5.interfaces.php#language.oop5.interfaces.constants
    -
        question: 'True or False ? Declaring class properties or methods as static makes them accessible without needing an instantiation of the class ?'
        answers:
            - {value: "True",    correct: true}
            - {value: "False",   correct: false}
        help: |
            http://php.net/manual/en/language.oop5.static.php
    -
        question: 'Which keyword permits to use the late static binding ?'
        answers:
            - {value: "self",    correct: false}
            - {value: "static",   correct: true}
            - {value: "parent",   correct: false}
        help: |
            http://php.net/manual/en/language.oop5.late-static-bindings.php
    -
        question: |
            What will the following code display?
            <?php
            $a = 2;
            echo (
                $a == 1 ? "one":
                $a == 2 ? "two":
                $a == 3 ? "three":
                $a == 4 ? "four": "other");
            echo "\n";
        answers:
            - {value: "one",   correct: false}
            - {value: "two",   correct: false}
            - {value: "three", correct: false}
            - {value: "four",  correct: true}
            - {value: "other", correct: false}
        help: |
            https://stackoverflow.com/questions/20559150/ternary-operator-left-associativity
    -
        question: 'True or False? "&&" and "and" operators are exactly the same'
        answers:
            - {value: "True", correct: false}
            - {value: "False",  correct: true}
        help: |
            https://www.php.net/manual/en/language.operators.logical.php
    -
        question: 'Is it possible to import several classes from the same namespace with the following syntax: use some\namespace\{ClassA, ClassB, ClassC as C};'
        answers:
            - {value: "yes", correct: true}
            - {value: "no",  correct: false}
        help: |
            https://www.php.net/manual/en/language.namespaces.importing.php
    -
        question: |
            As of PHP 7, what will the following code display?
            class A
            {
                function foo()
                {
                    if (isset($this)) {
                        echo '$this is defined (';
                        echo get_class($this);
                        echo ")\n";
                    } else {
                        echo "\$this is not defined.\n";
                    }
                }
            }

            class B
            {
                function bar()
                {
                    A::foo();
                }
            }

            $b = new B();
            $b->bar();
        answers:
            - {value: "$this is not defined", correct: true}
            - {value: "$this is defined (A)",  correct: false}
            - {value: "$this is defined (B)",  correct: false}
            - {value: "It will throw an error",  correct: false}
        help: |
            https://www.php.net/manual/en/language.namespaces.importing.php#example-173
    -
        question: 'True or False? A class can have a property and a method with the same name.'
        answers:
            - {value: "True", correct: true}
            - {value: "False",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.properties-methods
    -
        question: 'If a class extends another one, when overriding methods, the parameter signature should remain the same:'
        answers:
            - {value: "Always", correct: false}
            - {value: "Only for non final methods",  correct: false}
            - {value: "Always, with exactly one exception",  correct: true}
            - {value: "Always, with exactly two exceptions",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends
            Contructors can have different signatures in child and parent classes (if parent constructor is not abstract)
    -
        question: 'As of PHP 7.2, what is the preferred way to autoload classes?'
        answers:
            - {value: "spl_autoload_register()", correct: true}
            - {value: "__autoload()",  correct: false}
            - {value: "autoload_register_classes()",  correct: false}
            - {value: "spl_autoload()",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.autoload.php
    -
        question: 'True or False? Objects of the same type will have access to each others private and protected members even though they are not the same instances.'
        answers:
            - {value: "True", correct: true}
            - {value: "False",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.visibility.php#language.oop5.visibility-other-objects
    -
        question: 'Interfaces can declare:'
        answers:
            - {value: "constructors", correct: true}
            - {value: "public methods",  correct: true}
            - {value: "protected methods",  correct: false}
            - {value: "private methods",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.interfaces.php
    -
        question: 'It is possible to use two traits inserting a method with the same name:'
        answers:
            - {value: "By using the `insteadof` keyword", correct: true}
            - {value: "Never (it throws a Fatal Error)",  correct: false}
            - {value: "And the last used Trait has precedence over the first one",  correct: false}
            - {value: "By using the `as` keyword",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.traits.php
    -
        question: 'Which of the following are true?'
        answers:
            - {value: "Traits support the use of abstract methods", correct: true}
            - {value: "Traits can use other traits",  correct: true}
            - {value: "A Trait's method visibility can be changed when used in another class",  correct: true}
            - {value: "Traits can define both static members and static methods",  correct: true}
            - {value: "Traits can define properties",  correct: true}
        help: |
            https://www.php.net/manual/en/language.oop5.traits.php
    -
        question: 'Which of the following are true?'
        answers:
            - {value: "By default, when iterating through objects, only visible properties will be used", correct: true}
            - {value: "By default, objects cannot be iterated through",  correct: false}
            - {value: "The Iterator interface may be implemented to specify iteration behaviour",  correct: true}
            - {value: "The Iterator abstract class may be extended to specify iteration behaviour",  correct: false}
            - {value: "The Iterator Trait class may be used to specify iteration behaviour",  correct: false}
        help: |
            https://www.php.net/manual/en/language.oop5.iterations.php
    -
        question: 'In which variable is the current namespace stored?'
        answers:
            - {value: "__NAMESPACE__", correct: true}
            - {value: "__NAMESPACE", correct: false}
            - {value: "$_NAMESPACE", correct: false}
            - {value: "\NAMESPACE", correct: false}
        help: |
            https://www.php.net/manual/en/language.namespaces.nsconstants.php
    -
        question: 'Which of the following are properties of the Exception class?'
        answers:
            - {value: "message", correct: true}
            - {value: "code", correct: true}
            - {value: "file", correct: true}
            - {value: "line", correct: true}
            - {value: "trace", correct: true}
            - {value: "previous", correct: true}
            - {value: "traceString", correct: false}
            - {value: "severity", correct: false}
        help: |
            https://www.php.net/manual/en/class.exception.php
            https://www.php.net/manual/en/class.errorexception.php
            severity is an ErrorException property
    -
        question: 'Which of the following are core extensions?'
        answers:
            - {value: "Date/Time", correct: true}
            - {value: "Error Handling", correct: true}
            - {value: "Filesystem", correct: true}
            - {value: "URLs", correct: true}
            - {value: "Fileinfo", correct: false}
            - {value: "FTP", correct: false}
            - {value: "JSON", correct: false}
            - {value: "SimpleXML", correct: false}
        help: |
            https://www.php.net/manual/en/extensions.membership.php
    -
        question: 'Which of the following are bundled extensions?'
        answers:
            - {value: "OPcache", correct: true}
            - {value: "PDO", correct: true}
            - {value: "XML-RPC", correct: true}
            - {value: "intl", correct: true}
            - {value: "Tokenizer", correct: false}
            - {value: "Phar", correct: false}
            - {value: "cURL", correct: false}
            - {value: "LDAP", correct: false}
        help: |
            https://www.php.net/manual/en/extensions.membership.php
    -
        question: 'Which of the following are external extensions?'
        answers:
            - {value: "SOAP", correct: true}
            - {value: "Sodium", correct: true}
            - {value: "XML Parser", correct: true}
            - {value: "SimpleXML", correct: true}
            - {value: "Sockets", correct: false}
            - {value: "Sessions", correct: false}
            - {value: "Password Hashing", correct: false}
            - {value: "Mail", correct: false}
        help: |
            https://www.php.net/manual/en/extensions.membership.php
    -
        question: 'When using SplDoublyLinkedList, what mode should you set to use LIFO while deleting iterated elements?'
        answers:
            - {value: "0", correct: false}
            - {value: "1", correct: false}
            - {value: "2", correct: false}
            - {value: "3", correct: true}
        help: |
            https://www.php.net/manual/fr/class.spldoublylinkedlist.php
    -
        question: 'It is possible to use SplQueue as a stack'
        answers:
            - {value: "Yes, by setting iterator mode with a specific value", correct: false}
            - {value: "Yes, by using push and pop methods", correct: true}
            - {value: "No", correct: false}
            - {value: "Yes, thanks to the second argument of queue and enqueue methods", correct: false}
        help: |
            https://www.php.net/manual/fr/class.splqueue.php
    -
        question: 'Which of the following are true?'
        answers:
            - {value: "SplFixedArray is of fixed length", correct: true}
            - {value: "SplFixedArray allows only integers as indexes", correct: true}
            - {value: "SplFixedArray uses less memory than a standard array", correct: true}
            - {value: "You cannot replace SplFixedArray values", correct: false}
        help: |
            https://www.php.net/manual/fr/class.splfixedarray.php
    -
        question: 'Which of the following Exception classes are part of the SPL library?'
        answers:
            - {value: "InvalidArgumentException", correct: true}
            - {value: "LengthException", correct: true}
            - {value: "RangeException", correct: true}
            - {value: "OverflowException", correct: true}
            - {value: "ArgumentCountException", correct: false}
            - {value: "DivisionByZeroException", correct: false}
        help: |
            https://www.php.net/book.spl
    -
        question: 'Which of the following are implemented by SplFileObject?'
        answers:
            - {value: "SeekableIterator", correct: true}
            - {value: "RecursiveIterator", correct: true}
            - {value: "FilesystemIterator", correct: false}
            - {value: "FilterIterator", correct: false}
        help: |
            https://www.php.net/manual/fr/class.splfileobject.php
